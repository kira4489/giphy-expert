{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/Documentos/gifexpert/src/Components/GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React\n/* {useState,useEffect } */\nfrom 'react';\nimport { getGifs } from '../Helpers/getGifs';\nimport { GridItem } from './GridItem';\nimport { useFetchGifs } from './Hooks/useFetchGifs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifGrid = ({\n  category\n}) => {\n  _s();\n\n  const {\n    loading\n  } = useFetchGifs();\n  /* const [counts,setCounts]=useState(0) */\n  // const [images,setImages]=useState([])\n  // useEffect(()=>{\n  //  getGifs(category)\n  //  /* .then(imgs=>setImages(imgs)) */\n  //  .then(setImages)\n  // },[category])\n\n  /* const getGifs = async() => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=W9lzd20ZUMcW0YG3ntVBABpVh0RqpQvB`\n  const resp = await fetch(url)\n  const {data} = await resp.json()\n  \n  const gifs = data.map(img=>{\n      return {\n          id: img.id,\n          title: img.title,\n          url: img.images?.downsized_medium.url\n      }\n  })\n  console.log(gifs)\n  setImages(gifs)\n  } */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), loading ? \"cargando...\" : \"fin carga\"]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"uEb+21FRFFthhfdt44Bub6ZoFxU=\", false, function () {\n  return [useFetchGifs];\n});\n\n_c = GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["/home/jhonatan/Documentos/gifexpert/src/Components/GifGrid.js"],"names":["React","getGifs","GridItem","useFetchGifs","GifGrid","category","loading"],"mappings":";;;AAAA,OAAOA;AAAK;AAAZ,KAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACvC,QAAM;AAACC,IAAAA;AAAD,MAAYH,YAAY,EAA9B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACI;AAAA,4BACA;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,EAaCC,OAAO,GAAG,aAAH,GAAmB,WAb3B;AAAA,kBADJ;AAiBH,CA5CM;;GAAMF,O;UACKD,Y;;;KADLC,O","sourcesContent":["import React/* {useState,useEffect } */ from 'react'\nimport { getGifs } from '../Helpers/getGifs'\nimport { GridItem } from './GridItem'\nimport { useFetchGifs } from './Hooks/useFetchGifs'\n\nexport const GifGrid = ({category}) => {\nconst {loading} = useFetchGifs();\n/* const [counts,setCounts]=useState(0) */\n// const [images,setImages]=useState([])\n\n// useEffect(()=>{\n//  getGifs(category)\n//  /* .then(imgs=>setImages(imgs)) */\n//  .then(setImages)\n// },[category])\n\n/* const getGifs = async() => {\nconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=W9lzd20ZUMcW0YG3ntVBABpVh0RqpQvB`\nconst resp = await fetch(url)\nconst {data} = await resp.json()\n\nconst gifs = data.map(img=>{\n    return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url\n    }\n})\nconsole.log(gifs)\nsetImages(gifs)\n} */\n\n    return (\n        <>\n        <h3>{category}</h3>\n        {/* <div className=\"card-grid\"> \n           <ol>\n               {\n                images.map(img => (\n                   <GridItem \n                   key={img.id}\n                   {...img}/>\n                ))\n               }\n           </ol>\n        </div> */}\n        {loading ? \"cargando...\" : \"fin carga\"}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}