{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/Documentos/gifexpert/src/Components/AddCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddCategory = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState();\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddCategory, \"4cMrHKpYW7+zAriZ3oUNC16nAO4=\");\n\n_c = AddCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"sources":["/home/jhonatan/Documentos/gifexpert/src/Components/AddCategory.js"],"names":["React","useState","AddCategory","inputValue","setInputValue","handleInputChange","e","target","value","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEjC,QAAK,CAACC,UAAD,EAAYC,aAAZ,IAA2BH,QAAQ,EAAxC;;AAEA,QAAMI,iBAAiB,GAAGC,CAAD,IAAM;AAC7BF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO,CAE3B,CAFD;;AAII,sBACI;AAAA,2BAEA;AAAA,6BACC;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAEH,UAFP;AAGA,QAAA,QAAQ,EAAEE;AAHV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFA,mBADJ;AAYH,CAxBM;;GAAMH,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react'\n\nexport const AddCategory = () => {\n\nconst[inputValue,setInputValue]=useState()\n   \nconst handleInputChange= (e)=> {\n  setInputValue(e.target.value)\n}\n\nconst handleSubmit = (e) => {\n \n}\n\n    return (\n        <>\n        {/* <h1>{inputValue}</h1> */}\n        <form>\n         <input\n         type=\"text\"\n         value={inputValue}\n         onChange={handleInputChange}\n         />  \n         </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}